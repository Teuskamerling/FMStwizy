%%***************************************************************************************
%% file         sfcn_pwmout_init.tlc
%% brief        Target Language Compiler file that contains the code generation specifics
%%              for an S-function with the same name.
%%
%%---------------------------------------------------------------------------------------
%%                          C O P Y R I G H T
%%---------------------------------------------------------------------------------------
%%  Copyright 2019 (c) by HAN Automotive     http://www.han.nl     All rights reserved
%%
%%---------------------------------------------------------------------------------------
%%                            L I C E N S E
%%---------------------------------------------------------------------------------------
%% Permission is hereby granted, free of charge, to any person obtaining a copy of this
%% software and associated documentation files (the "Software"), to deal in the Software
%% without restriction, including without limitation the rights to use, copy, modify, merge,
%% publish, distribute, sublicense, and/or sell copies of the Software, and to permit
%% persons to whom the Software is furnished to do so, subject to the following conditions:
%%
%% The above copyright notice and this permission notice shall be included in all copies or
%% substantial portions of the Software.
%%
%% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
%% INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
%% PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
%% FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
%% OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
%% DEALINGS IN THE SOFTWARE.
%%
%%***************************************************************************************
%implements  sfcn_pwmout_init "C"

%% add required include files
%<LibAddToCommonIncludes("pwmout.h")>

%% Function: BlockTypeSetup ==========================================================
%%
%% Purpose:
%%      Code generation for configuration
%%
%function BlockTypeSetup(block, system) void
  %% Generate the function call subsystem function prototype.
  %openfile tmpBuf
  void PwmoutIRQ_%<block.RTWdata.moduleID>(void);
  %closefile tmpBuf
  %% write it to the model's source file.
  %assign srcFile = LibGetModelDotCFile()
  %<LibSetSourceFileSection(srcFile, "UserTop", tmpBuf)>
%endfunction  


%% Function: Start ==========================================================
%%
%% Purpose:
%%      Code generation for initialization
%%
%function Start(block, system) Output
  %%
  /* initialize the PWM module and register the callback handler */
  PwmoutInit(%<block.RTWdata.moduleID>, %<block.RTWdata.frequency>, %<block.RTWdata.alignment>);
  PwmoutRegisterPeriodCompleteCallback(%<block.RTWdata.moduleID>, PwmoutIRQ_%<block.RTWdata.moduleID>);
  %if ISEQUAL(CAST("Number",block.RTWdata.ch1On), 1)
  /* configures channel 1 */
  PwmoutConfigure(%<block.RTWdata.ch1ID>, %<block.RTWdata.ch1Pol>, %<block.RTWdata.ch1Inv>);
  %endif
  %if ISEQUAL(CAST("Number",block.RTWdata.ch2On), 1)
  /* configures channel 2 */
  PwmoutConfigure(%<block.RTWdata.ch2ID>, %<block.RTWdata.ch2Pol>, %<block.RTWdata.ch2Inv>);
  %endif
  %if ISEQUAL(CAST("Number",block.RTWdata.ch3On), 1)
  /* configures channel 3 */
  PwmoutConfigure(%<block.RTWdata.ch3ID>, %<block.RTWdata.ch3Pol>, %<block.RTWdata.ch3Inv>);
  %endif
  %if ISEQUAL(CAST("Number",block.RTWdata.ch4On), 1)
  /* configures channel 4 */
  PwmoutConfigure(%<block.RTWdata.ch4ID>, %<block.RTWdata.ch4Pol>, %<block.RTWdata.ch4Inv>);
  %endif
  %%
%endfunction

%% Function: Output ==========================================================
%%
%% Purpose:
%%      Code generation for signal output
%%
%function Outputs(block, system) Output
	%%
    %% Generate the function call subsystem as a seperate function.
    %openfile tmpBuf
    void PwmoutIRQ_%<block.RTWdata.moduleID>(void)
    {
      %foreach callIdx = NumSFcnSysOutputCalls
        %if LibIsEqual(SFcnSystemOutputCall[callIdx].BlockToCall, "unconnected")
          %continue
        %endif
        %% call the downstream system
        %<LibBlockExecuteFcnCall(block, callIdx)>\
      %endforeach    
    }
    %closefile tmpBuf
    %% write it to the model's source file.
    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Functions", tmpBuf)>
    
  
  %%
%endfunction



%%******************************* end of sfcn_pwmout_init.tlc ***************************





